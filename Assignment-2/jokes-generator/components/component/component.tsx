/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/26XsK3b7mZZ
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from "@/components/ui/select"
import { Slider } from "@/components/ui/slider"
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"

export function Component() {
  const [topic, setTopic] = useState("work")
  const [tone, setTone] = useState("witty")
  const [jokeType, setJokeType] = useState("pun")
  const [temperature, setTemperature] = useState(0.5)
  const [language, setLanguage] = useState("en")
  const [joke, setJoke] = useState("")
  const [jokeEvaluation, setJokeEvaluation] = useState("")
  const handleGenerateJoke = () => {
    const generatedJoke = `Here's a ${tone} ${jokeType} about ${topic} in ${language}:\n\nWhy can't a bicycle stand up by itself? It's two-tired!`
    setJoke(generatedJoke)
    const jokeEvaluation = evaluateJoke(generatedJoke)
    setJokeEvaluation(jokeEvaluation)
  }
  const evaluateJoke = (joke) => {
    if (joke.toLowerCase().includes("offensive")) {
      return "Offensive"
    } else if (joke.toLowerCase().includes("funny")) {
      return "Funny"
    } else {
      return "Appropriate"
    }
  }
  return (
    <div className="flex flex-col items-center justify-center h-screen bg-background text-foreground">
      <div className="max-w-md w-full space-y-4 text-center">
        <h1 className="text-4xl font-bold">Jokes Generator</h1>
        <div className="grid grid-cols-2 gap-4">
          <Select value={topic} onValueChange={setTopic} className="w-full">
            <SelectTrigger>
              <SelectValue placeholder="Topic" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="work">Work</SelectItem>
              <SelectItem value="people">People</SelectItem>
              <SelectItem value="animals">Animals</SelectItem>
              <SelectItem value="food">Food</SelectItem>
              <SelectItem value="television">Television</SelectItem>
            </SelectContent>
          </Select>
          <Select value={tone} onValueChange={setTone} className="w-full">
            <SelectTrigger>
              <SelectValue placeholder="Tone" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="witty">Witty</SelectItem>
              <SelectItem value="sarcastic">Sarcastic</SelectItem>
              <SelectItem value="silly">Silly</SelectItem>
              <SelectItem value="dark">Dark</SelectItem>
              <SelectItem value="goofy">Goofy</SelectItem>
            </SelectContent>
          </Select>
          <Select value={jokeType} onValueChange={setJokeType} className="w-full">
            <SelectTrigger>
              <SelectValue placeholder="Joke Type" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="pun">Pun</SelectItem>
              <SelectItem value="knockknock">Knock-Knock</SelectItem>
              <SelectItem value="story">Story</SelectItem>
            </SelectContent>
          </Select>
          <Select value={language} onValueChange={setLanguage} className="w-full">
            <SelectTrigger>
              <SelectValue placeholder="Language" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="en">English</SelectItem>
              <SelectItem value="zh">Chinese</SelectItem>
              <SelectItem value="es">Spanish</SelectItem>
              <SelectItem value="hi">Hindi</SelectItem>
              <SelectItem value="ja">Japanese</SelectItem>
              <SelectItem value="fr">French</SelectItem>
            </SelectContent>
          </Select>
          <div className="col-span-2 flex items-center gap-2">
            <span>Temperature:</span>
            <Slider
              value={[temperature]}
              onValueChange={setTemperature}
              min={0}
              max={1}
              step={0.01}
              className="flex-1"
            />
            <span>{(temperature * 100).toFixed(0)}%</span>
          </div>
        </div>
        <Button onClick={handleGenerateJoke} className="w-full">
          Generate Joke
        </Button>
        {joke && (
          <Card className="p-4 text-center">
            <CardContent>
              {joke}
              <div className="mt-4 text-sm font-medium text-muted-foreground">Joke Evaluation: {jokeEvaluation}</div>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  )
}
